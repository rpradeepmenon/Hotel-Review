library(rvest)
library(stringr)
library(tm)
library(wordcloud)
library(ggplot2)
library(SnowballC)
#### Function getReviews ####
## Function to extract reviews from the tripadvisor site for Ascott ##
getReviews <- function(url, hotelName)
{
hotelName <- hotelName
reviews <- url %>%
read_html() %>%
html_nodes("#REVIEWS .innerBubble")
id <- reviews %>%
html_node(".quote a") %>%
html_attr("id")
quote <- reviews %>%
html_node(".quote span") %>%
html_text()
rating <- reviews %>%
html_node(".rating .rating_s_fill") %>%
html_attr("alt") %>%
gsub(" of 5 stars", "", .) %>%
as.integer()
daterel <- reviews %>%
html_node(".rating .ratingDate") %>%
html_attr("title")
daterev <-  reviews %>%
html_node(".ratingDate") %>%
html_text() %>%
gsub("Reviewed ","",.) %>%
gsub("\n","",.)
review <- reviews %>%
html_node(".entry .partial_entry") %>%
html_text()
date <- ifelse(is.na(daterel), daterev, daterel)
reviewDf <- data.frame(hotelName, id, quote, rating, date, review, stringsAsFactors = FALSE)
return(reviewDf)
}
#### Get reviews and transform data from tripadvisor ####
reviewDf <- data.frame()
i <- 0
npage <- 15
# Get Reviews for Ascott Singapore, Bangkok, Shanghai
for (n in 1:npage) {
urlsg <- paste0("https://www.tripadvisor.com.sg/Hotel_Review-g294265-d1083872-Reviews-or",as.character(i),"-Ascott_Raffles_Place_Singapore-Singapore.html#REVIEW")
urlbkk <- paste0("https://www.tripadvisor.com.sg/Hotel_Review-g293916-d619165-Reviews-or",as.character(i),"-Ascott_Sathorn_Bangkok-Bangkok.html#REVIEW")
urlshg <- paste0("https://www.tripadvisor.com.sg/Hotel_Review-g308272-d1745751-Reviews-or",as.character(i),"-Ascott_Huai_Hai_Road_Shanghai-Shanghai.html#REVIEW")
print(urlsg)
print(urlbkk)
print(urlshg)
reviewDf <-   rbind(reviewDf, getReviews(urlsg, "Ascott Singapore"))
reviewDf <-   rbind(reviewDf, getReviews(urlbkk, "Ascott Bangkok"))
reviewDf <-   rbind(reviewDf, getReviews(urlshg, "Ascott Shanghai"))
i <- i + 10
}
# Add new fields
split <- strsplit(reviewDf$date, " ")
datedf <- as.data.frame(matrix(unlist(split), ncol = 3, byrow = TRUE))
reviewDf$year <- datedf$V3
reviewDf$month <- substr(datedf$V2, 1, 3)
levels(reviewDf$month) <- c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
head(reviewDf)
ggplot(data = reviewDf, aex(x = rating)) +
geom_bar(stat = "identity")
ggplot(data = reviewDf, aes(x = rating)) +
geom_bar(stat = "identity")
ggplot(data = reviewDf, aes(x = rating, y = value)) +
geom_bar(stat = "identity")
ggplot(data = reviewDf, aes(x = rating)) +
geom_bar(stat = "identity")
ggplot(data = reviewDf, aes(x = rating, y = NULL)) +
geom_bar(stat = "identity")
hist(reviewDf$rating)
ggplot(reviewDf, aes(rating)) + geom_histogram()
ggplot(reviewDf, aes(rating, fill = hotelName)) + geom_histogram(binwidth = 500)
ggplot(reviewDf, aes(rating, fill = hotelName)) + geom_histogram(binwidth = 1)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 1)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.1)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5) + face_grid(hotelName ~ .)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5) + face_wrap(hotelName ~ .)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5) + facet_wrap(hotelName ~ .)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5) + facet_wrap( ~ hotelName, ncol = 2)
ggplot(reviewDf, aes(rating)) + geom_histogram(binwidth = 0.5) + facet_wrap( ~ hotelName, ncol = 3)
ggplot(reviewDf, aes(rating)) +
geom_histogram(binwidth = 0.5, colour = "black", fill = "white") + geom_density(alpha=.2, fill="#FF6666") + facet_wrap( ~ hotelName, ncol = 3)
ggplot(reviewDf, aes(rating)) +
geom_histogram(binwidth = 0.5, colour = "black", fill = "black") + facet_wrap( ~ hotelName, ncol = 3)
ggplot(reviewDf, aes(rating)) +
geom_histogram(aes(y = ..density..),
binwidth = 0.5, colour = "black", fill = "black") +
facet_wrap( ~ hotelName, ncol = 3)
ggplot(reviewDf, aes(rating)) +
geom_histogram(aes(y = ..density..),
binwidth = 0.5, colour = "black", fill = "black") +
geom_density(alpha=.2, fill="#FF6666") +
facet_wrap( ~ hotelName, ncol = 3)
ggplot(reviewDf, aes(rating)) +
geom_histogram(aes(y = ..density..),
binwidth = 0.5, colour = "black", fill = "white") +
geom_density(alpha=.2, fill="#FF6666") +
facet_wrap( ~ hotelName, ncol = 3)
library(tm)
install.packages("tm")
library(tm)
text <- c("All happy families are alike; each unhappy family is unhappy in its own way.")
tm_map(text, removePunctuation)
doc <- Corpus(text)
?Corpus
text
doc <- Corpus(text)
Corpus("All happy families are alike; each unhappy family is unhappy in its own way.")
VectorSource(text)
text <- c("All happy families are alike; each unhappy family is unhappy in its own way.")
vs <- VectorSource(text)
doc <- Corpus(vs)
tm_map(doc, removePunctuation)
text <- c("All happy families are alike; each unhappy family is unhappy in its own way.")
vs <- VectorSource(text)
doc <- Corpus(vs)
doc.corpus <- tm_map(doc, removePunctuation)
doc.corpus <- tm_map(doc, tolower)
doc.corpus <- tm_map(doc, removeNumbers)
doc.corpus
library(SnowballC)
install.packages("SnowballC")
text <- c("All happy families are alike; each unhappy family is unhappy in its own way.")
vs <- VectorSource(text)
doc.corpus <- Corpus(vs)
doc.corpus <- tm_map(doc.corpus, removePunctuation)
doc.corpus <- tm_map(doc.corpus, tolower)
doc.corpus <- tm_map(doc.corpus, removeNumbers)
doc.corpus <- tm_map(doc.corpus, stemDocument)
inspect(doc.corpus)
tm_map(doc.corpus, stemDocument)
doc.corpus <- tm_map(doc.corpus, stemDocument)
